# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: S3 and GitHub Pages Deploy

on:
  push:
    branches: [ blog ]
  pull_request:
    branches: [ blog ]

jobs:
  build-n-deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }} 
      AWS_BUCKET_NAME: ${{ secrets.S3_BUCKET }}
    strategy:
      matrix:
        ruby-version: [2.7]
        node-version: [15]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby ${{ matrix.ruby-version }}
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
      uses: ruby/setup-ruby@v1
      # uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
      with:
        ruby-version: ${{ matrix.ruby-version }}
    - name: Set up cache key for gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
    - name: Install Ruby dependencies
      run: |
        bundle config path vendor/bundle
        bundle update
        bundle install --jobs 4 --retry 3
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Get Yarn cache dir
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Set up cache key for node_modules
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Install Node.js dependencies
      run: yarn --frozen-lockfile
    - name: Build AMSF
      run: grunt build
    - name: Deploy to S3 ðŸš€
      uses: raulanatol/aws-s3-docker-action@master
      env:
        SOURCE: ./_site/
        TARGET: ''
        WITH_DELETE: true
    - name: Invalidate CloudFront
      uses: chetan/invalidate-cloudfront-action@master
      env:
        DISTRIBUTION: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        PATHS: '/*'
        AWS_REGION: 'us-east-1'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Install SSH Client ðŸ”‘
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.DEPLOY_KEY }}
    - name: Deploy to Pages ðŸš€
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        BRANCH: gh-pages
        FOLDER: _site
        CLEAN: true
        SSH: true
